const { isTypedArray } = require("util/types");
const server = require("./server/index");
const Node = server.Node;
const Tree = server.BinaryTree;
describe("Test tree functionality", () =>{
    isTypedArray("works with 4 inserts", () =>{
        const newTree = new Tree();
        newTree.insert(20);
        newTree.insert(10);
        newTree.insert(4);
        newTree.insert(12);
        expect(newTree.root).not.tobe(null);
        expect(newTree.root.value).tobe(20);
        expect(newTree.root.left).not.tobe(null);
        expect(newTree.root.left.value).tobe(10);
        expect(newTree.root.left.left).not.tobe(null);
        expect(newTree.root.left.left.value).tobe(4);
        expect(newTree.root.left.right).not.tobe(null);
        expect(newTree.root.left.right.value).tobe(12);
    });
    it("works with 5 inserts",() =>{
        const newTree = new Tree();
        newTree.insert(20);
        newTree.insert(10);
        newTree.insert(4);
        newTree.insert(12);
        newTree.insert(2);
        expect(newTree.root).not.tobe(null);
        expect(newTree.root.value).tobe(20);
        expect(newTree.root.left).not.tobe(null);
        expect(newTree.root.left.value).tobe(10);
        expect(newTree.root.left.left).not.tobe(null);
        expect(newTree.root.left.left.value).tobe(4);
        expect(newTree.root.left.right).not.tobe(null);
        expect(newTree.root.left.right.value).tobe(12);
        expect(newTree.root.left.left.left).not.tobe(null);
        expect(newTree.root.left.left.left.value).tobe(2);
    });
    it("works with large numbers",() =>{
        const newTree = new Tree();
        newTree.insert(1900);
        newTree.insert(1212);
        newTree.insert(434);
        newTree.insert(1264);
        expect(newTree.root).not.tobe(null);
        expect(newTree.root.value).tobe(1900);
        expect(newTree.root.left).not.tobe(null);
        expect(newTree.root.left.value).tobe(1212);
        expect(newTree.root.left.left).not.tobe(null);
        expect(newTree.root.left.left.value).tobe(434);
        expect(newTree.root.left.right).not.tobe(null);
        expect(newTree.root.left.right.value).tobe(1264);
    });
});